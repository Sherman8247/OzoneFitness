@page "/gyms"
@using Microsoft.EntityFrameworkCore
@using OzoneFitness.Domain
@using OzoneFitness.Data
@using Microsoft.AspNetCore.Authorization
@implements IAsyncDisposable
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Gym Listings</PageTitle>

<div class="top-bar">
    <a href="/LoginHome" class="logo">Ozone Gym</a>
    <nav class="nav-links">
        <a href="/aboutus">About</a>
        <a href="/contacts">Contact</a>
        <a href="/gyms">Gym Outlet</a>
        <a href="/customers">Customer Page</a>
        <a href="/trainers">Trainers Page</a>
        <a href="/schedules">Schedule Page</a>
        <a href="/feedbacks">Feedback Page</a>
    </nav>
</div>

<body>
</body>

<h1>Gym Listings</h1>

<AuthorizeView Roles="Administrator">
    <Authorized>
        <p>
            <a href="gyms/create" class="btn btn-success">Create New</a>
        </p>
    </Authorized>
</AuthorizeView>

<!-- Traditional HTML Table for Gym Listings -->
<table class="table">
    <thead>
        <tr>
            <th>Gym ID</th>
            <th>Address</th>
            <th>Operating Hours</th>
            <th>Capacity</th>
            <th>Date Created</th>
            <th>Date Updated</th>
            <th>Created By</th>
            <th>Updated By</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var gym in gyms)
        {
            <tr>
                <td>@gym.GymId</td>
                <td>@gym.Address</td>
                <td>@gym.OperatingHours</td>
                <td>@gym.Capacity</td>
                <td>@gym.DateCreated.ToString("yyyy-MM-dd")</td>
                <td>@gym.DateUpdated.ToString("yyyy-MM-dd")</td>
                <td>@gym.CreatedBy</td>
                <td>@gym.UpdatedBy</td>
                <td>

                    <AuthorizeView Roles="Administrator">
                        <Authorized>
                            <a href="@($"gyms/details?id={gym.GymId}")" class="btn btn-info btn-sm">Details</a>
                            <a href="@($"gyms/edit?id={gym.GymId}")" class="btn btn-primary btn-sm">Edit</a>
                            <a href="@($"gyms/delete?id={gym.GymId}")" class="btn btn-danger btn-sm">Delete</a>
                        </Authorized>
                    </AuthorizeView>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Gym> gyms = new List<Gym>();

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        gyms = await context.Gym.ToListAsync();
    }

    public async ValueTask DisposeAsync()
    {
        // Ensure context is disposed of when done
        // No need for explicit disposal here since the context is used in a short-lived scope in OnInitializedAsync
    }
}