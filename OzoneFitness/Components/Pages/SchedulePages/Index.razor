@page "/schedules"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using OzoneFitness.Domain
@using OzoneFitness.Data
@implements IAsyncDisposable
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="schedules/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Schedule">
    <PropertyColumn Property="schedule => schedule.ScheduleId" />
    <PropertyColumn Property="schedule => schedule.DayOfWeek" />
    <PropertyColumn Property="schedule => schedule.StartTime" />
    <PropertyColumn Property="schedule => schedule.EndTime" />
    <PropertyColumn Property="schedule => schedule.TrainerId" />
    <PropertyColumn Property="schedule => schedule.DateCreated" />
    <PropertyColumn Property="schedule => schedule.DateUpdated" />
    <PropertyColumn Property="schedule => schedule.CreatedBy" />
    <PropertyColumn Property="schedule => schedule.UpdatedBy" />

    <TemplateColumn Context="schedule">
        <a href="@($"schedules/edit?id={schedule.Id}")">Edit</a> |
        <a href="@($"schedules/details?id={schedule.Id}")">Details</a> |
        <a href="@($"schedules/delete?id={schedule.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private OzoneFitnessContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
