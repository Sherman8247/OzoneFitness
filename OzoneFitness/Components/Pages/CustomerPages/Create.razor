@page "/customers/create"
@using Microsoft.EntityFrameworkCore
@using OzoneFitness.Domain
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<style>
    body {
        margin: 0;
        font-family: 'Poppins', Arial, sans-serif;
        background-color: black;
        color: white;
        line-height: 1.6;
    }

    h1, h2 {
        text-align: center;
        color: #EA4C89;
        margin-bottom: 20px;
    }

    hr {
        border-color: #EA4C89;
    }

    .row {
        display: flex;
        justify-content: center;
        margin: 20px 0;
    }

    .col-md-4 {
        background-color: #222;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);
        width: 100%;
        max-width: 600px;
    }

    .form-label {
        color: #EA4C89;
        font-weight: bold;
    }

    .form-control {
        background-color: #333;
        border: 1px solid #555;
        color: white;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
    }

        .form-control:focus {
            border-color: #EA4C89;
            outline: none;
            box-shadow: 0 0 5px rgba(234, 76, 137, 0.5);
        }

    .btn-primary {
        background-color: #EA4C89;
        border: none;
        color: white;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        display: block;
        width: 100%;
        margin-top: 10px;
    }

        .btn-primary:hover {
            background-color: #D03670;
        }

    a {
        color: #4BBF73;
        text-decoration: none;
        font-weight: bold;
    }

        a:hover {
            text-decoration: underline;
        }
</style>

<h1>Create</h1>
<h2>Customer</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Customer" OnValidSubmit="AddCustomer" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div>
                <label for="customerid" class="form-label">Customer ID:</label>
                <InputNumber id="customerid" @bind-Value="Customer.CustomerId" class="form-control" />
                <ValidationMessage For="() => Customer.CustomerId" class="text-danger" />
            </div>

            <div>
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Customer.Name" class="form-control" />
                <ValidationMessage For="() => Customer.Name" class="text-danger" />
            </div>

            <div>
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="Customer.Email" class="form-control" />
                <ValidationMessage For="() => Customer.Email" class="text-danger" />
            </div>

            <div>
                <label for="membershipstatus" class="form-label">Membership Status:</label>
                <InputText id="membershipstatus" @bind-Value="Customer.MembershipStatus" class="form-control" />
                <ValidationMessage For="() => Customer.MembershipStatus" class="text-danger" />
            </div>

            <div>
                <label for="datecreated" class="form-label">Date Created:</label>
                <InputDate id="datecreated" @bind-Value="Customer.DateCreated" class="form-control" />
                <ValidationMessage For="() => Customer.DateCreated" class="text-danger" />
            </div>

            <div>
                <label for="dateupdated" class="form-label">Date Updated:</label>
                <InputDate id="dateupdated" @bind-Value="Customer.DateUpdated" class="form-control" />
                <ValidationMessage For="() => Customer.DateUpdated" class="text-danger" />
            </div>

            <div>
                <label for="createdby" class="form-label">Created By:</label>
                <InputText id="createdby" @bind-Value="Customer.CreatedBy" class="form-control" />
                <ValidationMessage For="() => Customer.CreatedBy" class="text-danger" />
            </div>

            <div>
                <label for="updatedby" class="form-label">Updated By:</label>
                <InputText id="updatedby" @bind-Value="Customer.UpdatedBy" class="form-control" />
                <ValidationMessage For="() => Customer.UpdatedBy" class="text-danger" />
            </div>

            <button type="submit" class="btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/customers">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Customer Customer { get; set; } = new();

    private async Task AddCustomer()
    {
        using var context = DbFactory.CreateDbContext();
        context.Customer.Add(Customer);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/customers");
    }
}


