@page "/customers/create"
@using Microsoft.EntityFrameworkCore
@using OzoneFitness.Domain
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>


<body>

</body>
<h1>Create</h1>
<h2>Customer</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Customer" OnValidSubmit="AddCustomer" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div>
                <label for="customerid" class="form-label">Customer ID:</label>
                <InputNumber id="customerid" @bind-Value="Customer.CustomerId" class="form-control" />
                <ValidationMessage For="() => Customer.CustomerId" class="text-danger" />
            </div>

            <div>
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Customer.Name" class="form-control" />
                <ValidationMessage For="() => Customer.Name" class="text-danger" />
            </div>

            <div>
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="Customer.Email" class="form-control" />
                <ValidationMessage For="() => Customer.Email" class="text-danger" />
            </div>

            <div>
                <label for="membershipstatus" class="form-label">Membership Status:</label>
                <InputText id="membershipstatus" @bind-Value="Customer.MembershipStatus" class="form-control" />
                <ValidationMessage For="() => Customer.MembershipStatus" class="text-danger" />
            </div>

            <div>
                <label for="datecreated" class="form-label">Date Created:</label>
                <InputDate id="datecreated" @bind-Value="Customer.DateCreated" class="form-control" />
                <ValidationMessage For="() => Customer.DateCreated" class="text-danger" />
            </div>

            <div>
                <label for="dateupdated" class="form-label">Date Updated:</label>
                <InputDate id="dateupdated" @bind-Value="Customer.DateUpdated" class="form-control" />
                <ValidationMessage For="() => Customer.DateUpdated" class="text-danger" />
            </div>

            <div>
                <label for="createdby" class="form-label">Created By:</label>
                <InputText id="createdby" @bind-Value="Customer.CreatedBy" class="form-control" />
                <ValidationMessage For="() => Customer.CreatedBy" class="text-danger" />
            </div>

            <div>
                <label for="updatedby" class="form-label">Updated By:</label>
                <InputText id="updatedby" @bind-Value="Customer.UpdatedBy" class="form-control" />
                <ValidationMessage For="() => Customer.UpdatedBy" class="text-danger" />
            </div>

            <button type="submit" class="btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/customers">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Customer Customer { get; set; } = new();

    private async Task AddCustomer()
    {
        using var context = DbFactory.CreateDbContext();
        context.Customer.Add(Customer);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/customers");
    }
}