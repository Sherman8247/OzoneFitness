@page "/customers"
@using Microsoft.EntityFrameworkCore
@using OzoneFitness.Domain
@using OzoneFitness.Data
@using Microsoft.AspNetCore.Authorization
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Administrator")]

<PageTitle>Customer Management - Ozone Gym</PageTitle>

<body>

</body>
<div class="top-bar">
    <a href="/LoginHome" class="logo">Ozone Gym</a>
    <nav class="nav-links">
        <a href="/aboutus">About</a>
        <a href="/contacts">Contact</a>
        <a href="/gyms">Gym Outlet</a>
        <a href="/customers">Customer Page</a>
        <a href="/trainers">Trainers Page</a>
        <a href="/schedules">Schedule Page</a>
        <a href="/feedbacks">Feedback Page</a>
    </nav>
</div>

<link rel="stylesheet" href="css/Index.Razor.css">

<h1>Customer Management</h1>

<p>
    <a href="customers/create" class="btn btn-success">Create New Customer</a>
</p>

<table class="table table-striped customers-table">
    <thead>
        <tr>
            <th>Customer ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Membership Status</th>
            <th>Date Created</th>
            <th>Date Updated</th>
            <th>Created By</th>
            <th>Updated By</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (customers == null)
        {
            <tr>
                <td colspan="9">Loading...</td>
            </tr>
        }
        else
        {
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.CustomerId</td>
                    <td>@customer.Name</td>
                    <td>@customer.Email</td>
                    <td>@customer.MembershipStatus</td>
                    <td>@customer.DateCreated.ToShortDateString()</td>
                    <td>@customer.DateUpdated.ToShortDateString()</td>
                    <td>@customer.CreatedBy</td>
                    <td>@customer.UpdatedBy</td>
                    <td>
                        <a href="@($"customers/edit?id={customer.CustomerId}")" class="btn btn-primary btn-sm">Edit</a>
                        <a href="@($"customers/details?id={customer.CustomerId}")" class="btn btn-info btn-sm">Details</a>
                        <a href="@($"customers/delete?id={customer.CustomerId}")" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<Customer> customers = new List<Customer>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var context = DbFactory.CreateDbContext();
            customers = await context.Customer.ToListAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading customers: {ex.Message}");
        }
    }
}

<footer class="footer">
    <p>© 2025 Ozone Gym. All rights reserved.</p>
</footer>