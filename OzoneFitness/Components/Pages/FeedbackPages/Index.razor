@page "/feedbacks"
@using Microsoft.EntityFrameworkCore
@using OzoneFitness.Domain
@using OzoneFitness.Data
@using Microsoft.AspNetCore.Authorization
@implements IAsyncDisposable
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Feedbacks</PageTitle>

<div class="top-bar">
    <a href="/LoginHome" class="logo">Ozone Gym</a>
    <nav class="nav-links">
        <a href="/aboutus">About</a>
        <a href="/contacts">Contact</a>
        <a href="/gyms">Gym Outlet</a>
        <a href="/customers">Customer Page</a>
        <a href="/trainers">Trainers Page</a>
        <a href="/schedules">Schedule Page</a>
        <a href="/feedbacks">Feedback Page</a>
    </nav>
</div>

<body>

</body>
<h1>Feedbacks</h1>

<AuthorizeView Roles="Administrator">
    <Authorized>
        <p>
            <a href="feedbacks/create" class="btn btn-primary">Create New</a>
        </p>
    </Authorized>
</AuthorizeView>

<!-- Feedback Table -->
<div class="container">
    <table class="table">
        <thead>
            <tr>
                <th>Feedback ID</th>
                <th>Rating</th>
                <th>Comments</th>
                <th>Date of Submission</th>
                <th>Trainer ID</th>
                <th>Customer ID</th>
                <th>Date Created</th>
                <th>Date Updated</th>
                <th>Created By</th>
                <th>Updated By</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (feedbacks != null && feedbacks.Any())
            {
                @foreach (var feedback in feedbacks)
                {
                    <tr>
                        <td>@feedback.FeedbackId</td>
                        <td>@feedback.Rating</td>
                        <td>@feedback.Comments</td>
                        <td>@feedback.DateOfSubmission.ToShortDateString()</td>
                        <td>@feedback.TrainerId</td>
                        <td>@feedback.CustomerId</td>
                        <td>@feedback.DateCreated.ToShortDateString()</td>
                        <td>@(feedback.DateUpdated.ToShortDateString() ?? "N/A")</td>
                        <td>@feedback.CreatedBy</td>
                        <td>@feedback.UpdatedBy</td>
                        <td>
                            <AuthorizeView Roles="Administrator">
                                <Authorized>
                                    <a href="@($"/feedbacks/edit?id={feedback.FeedbackId}")" class=" btn btn-danger">Edit</a>
                                    <a href="@($"/feedbacks/details?id={feedback.FeedbackId}")" class="btn btn-info">Details</a>
                                    <a href="@($"/feedbacks/delete?id={feedback.FeedbackId}")" class="btn btn-danger">Delete</a>
                                </Authorized>
                            </AuthorizeView>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="11">No feedback data available.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<Feedback> feedbacks = new List<Feedback>();
    private OzoneFitnessContext context = default!;

    protected override async Task OnInitializedAsync()
    {
        // Fetch all the feedback records from the database
        context = DbFactory.CreateDbContext();
        feedbacks = await context.Feedback.ToListAsync();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}

<footer class="footer">
    <p>© 2025 Ozone Gym. All rights reserved.</p>
</footer>