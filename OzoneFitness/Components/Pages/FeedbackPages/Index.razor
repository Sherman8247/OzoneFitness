@page "/feedbacks"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using OzoneFitness.Domain
@using OzoneFitness.Data
@implements IAsyncDisposable
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="feedbacks/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Feedback">
    <PropertyColumn Property="feedback => feedback.FeedbackId" />
    <PropertyColumn Property="feedback => feedback.Rating" />
    <PropertyColumn Property="feedback => feedback.Comments" />
    <PropertyColumn Property="feedback => feedback.DateOfSubmission" />
    <PropertyColumn Property="feedback => feedback.TrainerId" />
    <PropertyColumn Property="feedback => feedback.CustomerId" />
    <PropertyColumn Property="feedback => feedback.DateCreated" />
    <PropertyColumn Property="feedback => feedback.DateUpdated" />
    <PropertyColumn Property="feedback => feedback.CreatedBy" />
    <PropertyColumn Property="feedback => feedback.UpdatedBy" />

    <TemplateColumn Context="feedback">
        <a href="@($"feedbacks/edit?id={feedback.Id}")">Edit</a> |
        <a href="@($"feedbacks/details?id={feedback.Id}")">Details</a> |
        <a href="@($"feedbacks/delete?id={feedback.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private OzoneFitnessContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
