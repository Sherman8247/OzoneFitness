@page "/feedbacks/create"
@using Microsoft.EntityFrameworkCore
@using OzoneFitness.Domain
@inject IDbContextFactory<OzoneFitness.Data.OzoneFitnessContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Feedback</PageTitle>
<link rel="stylesheet" href="css/Edit.razor.css" />  @* Link to the CSS file *@

<div class="container">
    @* Main container with background and styling *@
    <h1>Create Feedback</h1>
    <h2>New Feedback</h2>
    <hr />

    <div class="row">
        @* Bootstrap row for horizontal alignment *@
        <div class="col-md-6 offset-md-3">
            @* Bootstrap column for responsiveness *@
            <EditForm method="post" Model="Feedback" OnValidSubmit="AddFeedback" FormName="create">
                <DataAnnotationsValidator />
                <ValidationSummary class="validation-summary" role="alert" />

                <div class="mb-3">
                    <label for="feedbackid" class="form-label">Feedback ID:</label>
                    <InputNumber id="feedbackid" @bind-Value="Feedback.FeedbackId" class="form-control" />
                    <ValidationMessage For="() => Feedback.FeedbackId" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="rating" class="form-label">Rating:</label>
                    <InputNumber id="rating" @bind-Value="Feedback.Rating" class="form-control" />
                    <ValidationMessage For="() => Feedback.Rating" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="comments" class="form-label">Comments:</label>
                    <InputTextArea id="comments" @bind-Value="Feedback.Comments" class="form-control comments-textarea" />
                    <ValidationMessage For="() => Feedback.Comments" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="dateofsubmission" class="form-label">Date of Submission:</label>
                    <InputDate id="dateofsubmission" @bind-Value="Feedback.DateOfSubmission" class="form-control" />
                    <ValidationMessage For="() => Feedback.DateOfSubmission" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="trainerid" class="form-label">Trainer ID:</label>
                    <InputNumber id="trainerid" @bind-Value="Feedback.TrainerId" class="form-control" />
                    <ValidationMessage For="() => Feedback.TrainerId" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="customerid" class="form-label">Customer ID:</label>
                    <InputNumber id="customerid" @bind-Value="Feedback.CustomerId" class="form-control" />
                    <ValidationMessage For="() => Feedback.CustomerId" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="datecreated" class="form-label">Date Created:</label>
                    <InputDate id="datecreated" @bind-Value="Feedback.DateCreated" class="form-control" />
                    <ValidationMessage For="() => Feedback.DateCreated" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="dateupdated" class="form-label">Date Updated:</label>
                    <InputDate id="dateupdated" @bind-Value="Feedback.DateUpdated" class="form-control" />
                    <ValidationMessage For="() => Feedback.DateUpdated" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="createdby" class="form-label">Created By:</label>
                    <InputText id="createdby" @bind-Value="Feedback.CreatedBy" class="form-control" />
                    <ValidationMessage For="() => Feedback.CreatedBy" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="updatedby" class="form-label">Updated By:</label>
                    <InputText id="updatedby" @bind-Value="Feedback.UpdatedBy" class="form-control" />
                    <ValidationMessage For="() => Feedback.UpdatedBy" class="text-danger" />
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Create</button>
                    <a href="/feedbacks" class="btn btn-secondary">Back to List</a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Feedback Feedback { get; set; } = new();

    private async Task AddFeedback()
    {
        using var context = DbFactory.CreateDbContext();
        context.Feedback.Add(Feedback);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/feedbacks");
    }
}